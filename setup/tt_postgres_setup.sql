CREATE TABLE IF NOT EXISTS "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar UNIQUE NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "password_hash" varchar NOT NULL,
  "role" varchar DEFAULT 'user',
  "created_at" timestamp default CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "user_profiles" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "first_name" varchar,
  "last_name" varchar,
  "date_of_birth" date,
  "profile_picture_url" varchar,
  "bio" text,
  "website_url" varchar,
  "updated_at" timestamp,
  CONSTRAINT fk_user_profile_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")
);

CREATE TABLE IF NOT EXISTS "posts" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "title" varchar NOT NULL,
  "content" text NOT NULL,
  "status" varchar,
  "created_at" timestamp,
  "updated_at" timestamp,
  CONSTRAINT fk_post_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")
);

CREATE TABLE IF NOT EXISTS "comments" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "content" text NOT NULL,
  "user_id" integer NOT NULL,
  "post_id" integer NOT NULL,
  "parent_comment_id" integer,
  "created_at" timestamp,
  CONSTRAINT fk_comment_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"),
  CONSTRAINT fk_comment_post_id FOREIGN KEY ("post_id") REFERENCES "posts" ("id"),
  CONSTRAINT fk_comment_parent_id FOREIGN KEY ("parent_comment_id") REFERENCES "comments" ("id")
);

CREATE TABLE IF NOT EXISTS "follows" (
  "following_user_id" integer,
  "followed_user_id" integer,
  "created_at" timestamp,
  CONSTRAINT fk_following_user FOREIGN KEY ("following_user_id") REFERENCES "users" ("id"),
  CONSTRAINT fk_followed_user FOREIGN KEY ("followed_user_id") REFERENCES "users" ("id")
);

CREATE TABLE IF NOT EXISTS "tags" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "tag" varchar UNIQUE NOT NULL,
  "created_at" timestamp
);

CREATE TABLE IF NOT EXISTS "categories" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "name" varchar UNIQUE NOT NULL,
  "created_at" timestamp
);

CREATE TABLE IF NOT EXISTS "post_tags" (
  "post_id" integer NOT NULL,
  "tag_id" integer NOT NULL,
  CONSTRAINT fk_post_tags_post_id FOREIGN KEY ("post_id") REFERENCES "posts" ("id"),
  CONSTRAINT fk_post_tags_tag_id FOREIGN KEY ("tag_id") REFERENCES "tags" ("id")
);

CREATE TABLE IF NOT EXISTS "post_categories" (
  "post_id" integer NOT NULL,
  "category_id" integer NOT NULL,
  CONSTRAINT fk_post_categories_post_id FOREIGN KEY ("post_id") REFERENCES "posts" ("id"),
  CONSTRAINT fk_post_categories_category_id FOREIGN KEY ("category_id") REFERENCES "categories" ("id")
);

COMMENT ON COLUMN "users"."password_hash" IS 'Hashed and salted password';
COMMENT ON COLUMN "posts"."content" IS 'Content of the post in markdown format';
COMMENT ON COLUMN "comments"."content" IS 'Contents of the comment';
